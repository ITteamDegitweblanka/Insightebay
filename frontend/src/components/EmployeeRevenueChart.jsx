import React, { useState } from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend } from 'recharts';

const ranges = [
  { label: '7D', days: 7 },
  { label: '14D', days: 14 },
  { label: '30D', days: 30 },
  { label: '90D', days: 90 },
];

function EmployeeRevenueChart({ data: propData, onRangeChange }) {
  const [selected, setSelected] = useState('30D');
  // If parent controls, use prop; else, fallback
  const [data, setData] = useState(propData || []);

  React.useEffect(() => {
    if (onRangeChange) {
      onRangeChange(selected);
    }
  }, [selected, onRangeChange]);

  React.useEffect(() => {
    if (propData) setData(propData);
  }, [propData]);

  if (!data) return null;
  return (
    <div className="bg-white rounded-xl shadow p-6 flex-1 min-w-[350px]">
      <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-2 gap-2">
        <div>
          <h2 className="text-xl font-bold mb-1">Employee Revenue</h2>
          <p className="text-gray-500 text-sm">Revenue generated by each employee in the selected range.</p>
        </div>
        <div className="flex gap-2 flex-wrap">
          {ranges.map(r => (
            <button
              key={r.label}
              className={`px-3 py-1 rounded-full text-xs font-semibold border border-gray-200 shadow-sm transition-all duration-150 focus:outline-none focus:ring-2 focus:ring-primary/40 ${selected === r.label ? 'bg-primary text-white border-primary scale-105' : 'bg-gray-100 text-gray-700 hover:bg-primary/10'}`}
              onClick={() => setSelected(r.label)}
            >{r.label}</button>
          ))}
        </div>
      </div>
      <ResponsiveContainer width="100%" height={250}>
        <BarChart data={data} barGap={8}>
          <XAxis dataKey="name" tick={{ fontSize: 13 }} />
          <YAxis tickFormatter={v => `$${v/1000}k`} />
          <Tooltip formatter={(v, n) => [`$${v.toLocaleString()}`, n === 'revenue' ? 'Current' : 'Previous']} />
          <Legend />
          <Bar dataKey="revenue" name="Current" fill="#2563eb" radius={[6,6,0,0]} barSize={32} />
          <Bar dataKey="prevRevenue" name="Previous" fill="#dbeafe" radius={[6,6,0,0]} barSize={32} />
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
}

export default EmployeeRevenueChart;
